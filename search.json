[{"title":"HelloWorld","url":"/p/77770c79.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>你好世界！</p>\n"},{"title":"wifi密码破解总结","url":"/p/d1ada1c1.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"无线网卡选择\"><a href=\"#无线网卡选择\" class=\"headerlink\" title=\"无线网卡选择\"></a>无线网卡选择</h1><p>无线网卡需要支持监听模式并支持linux，推荐两个。<br>1、RT5370<br>2、AX210  </p>\n<h1 id=\"常用wifi破解方式\"><a href=\"#常用wifi破解方式\" class=\"headerlink\" title=\"常用wifi破解方式\"></a>常用wifi破解方式</h1><p>1、获取wifi握手包，然后跑密码字典暴力破解<br>2、针对有WPS功能的路由器，跑PIN码暴力破解<br>本人选择第一种方式</p>\n<h1 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h1><h2 id=\"安装系统\"><a href=\"#安装系统\" class=\"headerlink\" title=\"安装系统\"></a>安装系统</h2><p>安装Kali系统,清华大学开源软件镜像站下载地址如下<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/kali-images/current/\">https://mirrors.tuna.tsinghua.edu.cn/kali-images/current/</a></p>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><h3 id=\"查看网卡\"><a href=\"#查看网卡\" class=\"headerlink\" title=\"查看网卡\"></a>查看网卡</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifconfig</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"开启监听模式\"><a href=\"#开启监听模式\" class=\"headerlink\" title=\"开启监听模式\"></a>开启监听模式</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">airmon-ng start <span class=\"token operator\">&lt;</span>网卡名称<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"捕获数据\"><a href=\"#捕获数据\" class=\"headerlink\" title=\"捕获数据\"></a>捕获数据</h3><p>此命令将会输出两个列表，上边那个列表是各个wifi信息，下边那个列表是各个设备连接wifi的信息。<br>按ctrl+c中止执行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">airodump-ng <span class=\"token operator\">&lt;</span>网卡名称+mon<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>PWR：路由器的信号情况 数值越大信号越强 （-54 &gt; -60） -1通常是获取不到信号强弱信息<br>Data：捕获的数据包数量，数值越大说明路由器上连接的无线设备越活跃<br>CH：WiFi频道<br>ESSID：路由器wifi名字 当名字显示&lt;length: *&gt;的时候，说明路由器隐藏了SSID<br>STATION：客户端的MAC地址<br>BSSID：路由器的MAC地址<br>Probe：设备曾经连过的WiFi名字  </p>\n</blockquote>\n<h3 id=\"监听握手\"><a href=\"#监听握手\" class=\"headerlink\" title=\"监听握手\"></a>监听握手</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">airodump-ng <span class=\"token parameter variable\">--bssid</span> <span class=\"token operator\">&lt;</span>BSSID<span class=\"token operator\">></span> <span class=\"token parameter variable\">-c</span> <span class=\"token operator\">&lt;</span>CH<span class=\"token operator\">></span> <span class=\"token parameter variable\">-w</span> <span class=\"token operator\">&lt;</span>文件前缀，包含路径<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>网卡名称+mon<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"解除验证攻击\"><a href=\"#解除验证攻击\" class=\"headerlink\" title=\"解除验证攻击\"></a>解除验证攻击</h3><p>只有wifi连接的时候我们才能获取到握手包，因此，为了加快获取握手包，我们可以人为攻击使连接路由的设备掉线。<br>新开一个终端执行以下命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mdk4 <span class=\"token punctuation\">[</span>网卡名称+mon<span class=\"token punctuation\">]</span> d <span class=\"token parameter variable\">-B</span> <span class=\"token operator\">&lt;</span>BSSID<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>很多教程使用mdk3或者aireplay-ng进行解除验证攻击，实测不好使。</p>\n</blockquote>\n<h3 id=\"转换握手包格式\"><a href=\"#转换握手包格式\" class=\"headerlink\" title=\"转换握手包格式\"></a>转换握手包格式</h3><p>当用户掉线并重新连接上wifi，监听握手那里就能获取到握手包(右上角显示WPA handshake:***)，系统里会出现个&lt;文件前缀，包含路径&gt;-01.cap的文件，ctrl+c中止执行，执行以下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hcxpcapngtool <span class=\"token parameter variable\">-o</span> <span class=\"token operator\">&lt;</span>输出的文件名.hc2200<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> <span class=\"token operator\">&lt;</span>输入的文件.cap<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>在线转换地址<br><a href=\"https://hashcat.net/cap2hashcat/\">https://hashcat.net/cap2hashcat/</a></p>\n</blockquote>\n<h3 id=\"开一台服务器\"><a href=\"#开一台服务器\" class=\"headerlink\" title=\"开一台服务器\"></a>开一台服务器</h3><p>我这里使用阿里云开了一台抢占式实例（按小时计费并竞价，需要账户余额大于100元）,架构选择GPU云服务器，系统我选择Ubuntu</p>\n<h4 id=\"安装GPU驱动\"><a href=\"#安装GPU驱动\" class=\"headerlink\" title=\"安装GPU驱动\"></a>安装GPU驱动</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 更新源</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n\n<span class=\"token comment\"># 安装 `ubuntu-drivers`</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> ubuntu-drivers-common\n\n<span class=\"token comment\"># 查看设备</span>\nubuntu-drivers devices\n\n<span class=\"token comment\"># Outputs:</span>\n<span class=\"token comment\"># ......</span>\n<span class=\"token comment\"># driver   : nvidia-driver-515-server - distro non-free</span>\n<span class=\"token comment\"># driver   : nvidia-driver-515 - distro non-free recommended</span>\n<span class=\"token comment\"># ......</span>\n\n<span class=\"token comment\"># 找到包含 recommended 的那行, 就是目前最新版的驱动</span>\n<span class=\"token comment\"># 安装驱动, 我们选择安装 server 版</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> nvidia-driver-515-server\n\n<span class=\"token comment\"># 重启</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">reboot</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"安装hashcat\"><a href=\"#安装hashcat\" class=\"headerlink\" title=\"安装hashcat\"></a>安装hashcat</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> hashcat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"下载密码字典\"><a href=\"#下载密码字典\" class=\"headerlink\" title=\"下载密码字典\"></a>下载密码字典</h4><p>密码字典下载链接(9.8G)<br><a href=\"https://pan.baidu.com/s/1RTIBG9ur_kAjpXCf_27yFQ?pwd=vhmw\">https://pan.baidu.com/s/1RTIBG9ur_kAjpXCf_27yFQ?pwd&#x3D;vhmw</a></p>\n<h4 id=\"跑字典\"><a href=\"#跑字典\" class=\"headerlink\" title=\"跑字典\"></a>跑字典</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hashcat <span class=\"token parameter variable\">-w</span> <span class=\"token number\">3</span> <span class=\"token parameter variable\">-m</span> <span class=\"token number\">22000</span> <span class=\"token operator\">&lt;</span>xxx.hc2200<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span> <span class=\"token operator\">&lt;</span>字典<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"最终结果\"><a href=\"#最终结果\" class=\"headerlink\" title=\"最终结果\"></a>最终结果</h1><p>半小时跑完了，然后没有得到密码，它这个的确很靠运气。</p>\n","categories":["破解"],"tags":["wifi"]},{"title":"一点关于爱而不得的思考","url":"/p/673d8295.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近感觉对于有些问题终于想的通透起来了，不分享一下有点亏？？？<br>先说结论，不是因为相信爱所以得到爱，而是因为得到爱所以相信爱。<br>为什么会这么说呢？物质决定意识，你相信爱但是得不到爱，这不匹配，这是一个矛盾。矛盾你不解决你就痛苦。<br>面对这个矛盾，最好的方法是解决，去得到爱让你不再痛苦（其实不相信爱也可以，但不是最优选择？？？）。<br>其次的方法是面对，承认事实，努力啊、上进啊、挣钱啊，一边痛苦一边解决，我要努力配得上一个更好的他（她）。<br>最不好的方法是逃避，幻想一个理想的他（她），每每想起就觉得全身充满了干劲。<br>解决、面对、逃避，这三者的界限其实很模糊的，剩女剩男大概就是解决解决着变成了面对，面对面对着变成了逃避，逃避逃避着不再相信爱？<br>现代年轻人的问题是容易跳过解决和面对这两个环节直接变成逃避？？？<br>因为现代年轻人一方面容易把异性想的过于美好，比如我爱的他（她）一定会来找我的、我爱的他（她）是怎么怎么样，另一方面就是大家都很忙，在时间成本压力下趋向于向周边人下手，选择面窄，不容易选择到合适的。这两方面原因都容易让年轻人拖到逃避这个环节。<br>然后我给大家讲讲为什么逃避逃避着容易变成不再相信爱。<br>因为逃避对于解决你相信爱但是得不到爱这个矛盾毫无作用，还会起反作用，没办法，想多了高富帅就是容易对矮矬穷产生抗拒。<br>那种幻想完全不利于你解决矛盾，反而会激化矛盾，矛盾激化后你会怎么办的？解决？面对？想多了，能解决面对早解决面对了。<br>矛盾激化后你会更加陷入幻想，把他（她）幻想的更好，获得更大的一种心理上的满足。<br>然后幻想而满足-&gt;得不到而痛苦-&gt;幻想而满足-&gt;得不到而痛苦持续循环，这种循环大致会导致三种结果。<br>第一种结果，崩溃，这种情况大多出现于缺爱的孩子身上，因为这种缺爱的孩子更需要这种幻想的爱，死循环速度也更快，发展严重精神上会有问题？？？<br>第二种结果，不相信爱，变得现实起来，独身主义啊、为了现实的利益结婚啊。<br>第三种结果，持续循环，能持续循环而不崩甚至不再痛苦其实也有办法的，把这种幻想不再当成一种“爱情”而是当成一种“信仰”不就解决了，这种情况也容易出现在缺爱的孩子身上。</p>\n","tags":["思辨"]},{"title":"使用Github Actions部署hexo——git部署和shell部署","url":"/p/78eaccf1.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"hexo设置\"><a href=\"#hexo设置\" class=\"headerlink\" title=\"hexo设置\"></a>hexo设置</h1><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n    <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//&lt;访问令牌<span class=\"token punctuation\">></span>@&lt;静态博客仓库地址<span class=\"token punctuation\">></span>\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main\n    <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> Site updated <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> now('YYYY<span class=\"token punctuation\">-</span>MM<span class=\"token punctuation\">-</span>DD HH<span class=\"token punctuation\">:</span>mm<span class=\"token punctuation\">:</span>ss') <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> shell\n    <span class=\"token comment\"># 私钥上传到仓库，如何获得私钥位置请看Github Actions设置</span>\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'scp -i &lt;私钥> -r &lt;本地目录> &lt;用户名>@&lt;主机地址>:&lt;远程目录>'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"Github-Actions设置\"><a href=\"#Github-Actions设置\" class=\"headerlink\" title=\"Github Actions设置\"></a>Github Actions设置</h1><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main <span class=\"token comment\"># 分支名</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 18.13.0 <span class=\"token comment\"># nodejs版本</span>\n      <span class=\"token comment\"># 私钥上传仓库,查看Github Actions输出的原始日志查看私钥位置</span>\n      <span class=\"token comment\"># - name: Get private key location</span>\n      <span class=\"token comment\">#   run: |</span><span class=\"token scalar string\">\n      #     echo: \"=======Private key location=======\"\n      #     find / -name &lt;私钥文件名>\n      #     echo: \"==================================\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setting git\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">PRIVATE_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>secrets.PRIVATE_KEY<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          mkdir -p ~/.ssh/\n          echo \"$PRIVATE_KEY\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          chmod 600 &lt;私钥>\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          ssh-keyscan &lt;主机地址> >> ~/.ssh/known_hosts\n          git config --global user.name &lt;名字>\n          git config --global user.email &lt;邮箱></span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo install\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm i -g hexo-cli\n          npm install hexo-deployer-git --save\n          npm install hexo-deployer-shell --save\n          npm i</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo deploy\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          hexo clean\n          hexo generate\n          hexo deploy</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["github"],"tags":["Github Actions"]},{"title":"使用python快捷上传图片","url":"/p/d93cdafb.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>这两天在研究怎样快捷的把图片上传到主机上，主要是用于<code>markdown</code>文章的图片插入。<br>一开始我选择的是PicGo这个开源软件，但是吧，它老是上传失败，折腾了很久，放弃了。<br>然后，我试图用go语言编写图片上传的程序，但是搜索发现，go不是很擅长这方面的东西，很麻烦，本人技术能力有限，果断放弃。<br>最后，我试图用python编写图片上传的程序，很好使。</p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>这个脚本会添加热键，热键执行读取剪贴板图片然后通过sftp上传到指定主机的指定位置的操作并把外链复制到剪贴板<br>github仓库地址<a href=\"https://github.com/laelliang/clipboard_img_upload\">https://github.com/laelliang/clipboard_img_upload</a></p>\n<h1 id=\"config设置\"><a href=\"#config设置\" class=\"headerlink\" title=\"config设置\"></a>config设置</h1><table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>privateKeyPath</td>\n<td>私钥位置</td>\n</tr>\n<tr>\n<td>imgSavePath</td>\n<td>剪贴板文件临时保存位置</td>\n</tr>\n<tr>\n<td>host</td>\n<td>主机ip</td>\n</tr>\n<tr>\n<td>port</td>\n<td>ssh端口</td>\n</tr>\n<tr>\n<td>userName</td>\n<td>登录用户名</td>\n</tr>\n<tr>\n<td>serverPath</td>\n<td>远程主机保存位置</td>\n</tr>\n<tr>\n<td>webPath</td>\n<td>上传完毕后复制到剪贴板的前缀</td>\n</tr>\n</tbody></table>\n<h1 id=\"如何解决热键冲突\"><a href=\"#如何解决热键冲突\" class=\"headerlink\" title=\"如何解决热键冲突\"></a>如何解决热键冲突</h1><p>推荐使用OpenArk删除热键<br>下载地址<a href=\"https://github.com/BlackINT3/OpenArk/releases\">https://github.com/BlackINT3/OpenArk/releases</a></p>\n<h1 id=\"python代码\"><a href=\"#python代码\" class=\"headerlink\" title=\"python代码\"></a>python代码</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageGrab\n<span class=\"token keyword\">import</span> paramiko\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> ctypes\n<span class=\"token keyword\">import</span> ctypes<span class=\"token punctuation\">.</span>wintypes\n<span class=\"token keyword\">import</span> win32con\n<span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n<span class=\"token keyword\">from</span> win11toast <span class=\"token keyword\">import</span> toast\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> yaml\n<span class=\"token keyword\">import</span> pyperclip\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HotKey</span><span class=\"token punctuation\">(</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    注册热键\n    \"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> call_back<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token comment\"># https://learn.microsoft.com/en-us/windows/win32/inputdev/wm-hotkey</span>\n        hotKeyCtrl <span class=\"token operator\">=</span> <span class=\"token number\">0x0002</span>\n        hotKeyShift <span class=\"token operator\">=</span> <span class=\"token number\">0x0004</span>\n\n        <span class=\"token comment\"># https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes</span>\n        keyU <span class=\"token operator\">=</span> <span class=\"token number\">0x55</span>\n        \n        <span class=\"token comment\"># 注册全局热键</span>\n        self<span class=\"token punctuation\">.</span>HotKeyId <span class=\"token operator\">=</span> ctypes<span class=\"token punctuation\">.</span>WinDLL<span class=\"token punctuation\">(</span><span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>RegisterHotKey<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34001</span><span class=\"token punctuation\">,</span> hotKeyCtrl <span class=\"token operator\">|</span> hotKeyShift<span class=\"token punctuation\">,</span> keyU<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>HotKeyId <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            toast<span class=\"token punctuation\">(</span><span class=\"token string\">\"热键注册失败，程序已退出\"</span><span class=\"token punctuation\">)</span>\n            sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        msg <span class=\"token operator\">=</span> ctypes<span class=\"token punctuation\">.</span>wintypes<span class=\"token punctuation\">.</span>MSG<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ctypes<span class=\"token punctuation\">.</span>windll<span class=\"token punctuation\">.</span>user32<span class=\"token punctuation\">.</span>GetMessageA<span class=\"token punctuation\">(</span>ctypes<span class=\"token punctuation\">.</span>byref<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> msg<span class=\"token punctuation\">.</span>message <span class=\"token operator\">==</span> win32con<span class=\"token punctuation\">.</span>WM_HOTKEY <span class=\"token keyword\">and</span> msg<span class=\"token punctuation\">.</span>wParam <span class=\"token operator\">==</span> <span class=\"token number\">34001</span><span class=\"token punctuation\">:</span>\n                    call_back<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ctypes<span class=\"token punctuation\">.</span>WinDLL<span class=\"token punctuation\">(</span><span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>UnregisterHotKey<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>HotKeyId<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sftp_upload_file</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span>user<span class=\"token punctuation\">,</span>port<span class=\"token punctuation\">,</span>private_key_path<span class=\"token punctuation\">,</span>server_path<span class=\"token punctuation\">,</span> local_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    上传文件，注意：不支持文件夹\n    :param host: 主机名\n    :param port: 端口\n    :param user: 用户名\n    :param private_key_path: 私钥路径\n    :param server_path: 远程路径，比如：/home/sdn/tmp.txt\n    :param local_path: 本地路径，比如：D:/text.txt\n    :return: bool\n    \"\"\"</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        private_key <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>RSAKey<span class=\"token punctuation\">.</span>from_private_key_file<span class=\"token punctuation\">(</span>private_key_path<span class=\"token punctuation\">)</span>\n        client <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>SSHClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        client<span class=\"token punctuation\">.</span>set_missing_host_key_policy<span class=\"token punctuation\">(</span>paramiko<span class=\"token punctuation\">.</span>AutoAddPolicy<span class=\"token punctuation\">)</span>\n        client<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>hostname<span class=\"token operator\">=</span>host<span class=\"token punctuation\">,</span>port<span class=\"token operator\">=</span>port<span class=\"token punctuation\">,</span>username<span class=\"token operator\">=</span>user<span class=\"token punctuation\">,</span>pkey<span class=\"token operator\">=</span>private_key<span class=\"token punctuation\">)</span>\n        sftp <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>open_sftp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        sftp<span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>local_path<span class=\"token punctuation\">,</span> server_path<span class=\"token punctuation\">)</span>\n        sftp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        client<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">save_clipboard_img</span><span class=\"token punctuation\">(</span>savePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    保存剪贴板图片\n    \"\"\"</span>\n    <span class=\"token comment\"># 读取剪贴板图片</span>\n    im <span class=\"token operator\">=</span> ImageGrab<span class=\"token punctuation\">.</span>grabclipboard<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> im <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n    <span class=\"token comment\"># 获得当前时间时间戳</span>\n    now <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 转换为其他日期格式</span>\n    timeArray <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>localtime<span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span>\n    otherStyleTime <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y%m%d%H%M%S\"</span><span class=\"token punctuation\">,</span> timeArray<span class=\"token punctuation\">)</span>\n\n    imgSavePath <span class=\"token operator\">=</span> savePath  <span class=\"token operator\">+</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> otherStyleTime <span class=\"token operator\">+</span> <span class=\"token string\">\".jpg\"</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>imgSavePath<span class=\"token punctuation\">)</span>\n    im<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>imgSavePath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> otherStyleTime <span class=\"token operator\">+</span> <span class=\"token string\">\".jpg\"</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">clipboard_upload</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    imgName <span class=\"token operator\">=</span> save_clipboard_img<span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'imgSavePath'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> imgName <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        toast<span class=\"token punctuation\">(</span><span class=\"token string\">\"剪贴板内没有图片\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n    imgSavePath <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">[</span><span class=\"token string\">'imgSavePath'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\\\'</span> <span class=\"token operator\">+</span> imgName\n    serverPath <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">[</span><span class=\"token string\">'serverPath'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> imgName\n    upload_result <span class=\"token operator\">=</span> sftp_upload_file<span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'host'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'userName'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'port'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>conf<span class=\"token punctuation\">[</span><span class=\"token string\">'privateKeyPath'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>serverPath<span class=\"token punctuation\">,</span>imgSavePath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> upload_result<span class=\"token punctuation\">:</span>\n        webImgPath <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">[</span><span class=\"token string\">'webPath'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> imgName\n        pyperclip<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>webImgPath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        toast<span class=\"token punctuation\">(</span><span class=\"token string\">\"上传失败\"</span><span class=\"token punctuation\">)</span>\n\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 获取yaml文件路径</span>\n    yamlPath <span class=\"token operator\">=</span> <span class=\"token string\">'config.yml'</span>\n    fieldList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'privateKeyPath'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'imgSavePath'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'host'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'port'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'userName'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'serverPath'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'webPath'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>yamlPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        ayml <span class=\"token operator\">=</span> yaml<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>Loader<span class=\"token operator\">=</span>yaml<span class=\"token punctuation\">.</span>Loader<span class=\"token punctuation\">)</span>\n        ayml_keys <span class=\"token operator\">=</span> ayml<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> field <span class=\"token keyword\">in</span> fieldList<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> field <span class=\"token keyword\">in</span> ayml_keys <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n                toast<span class=\"token punctuation\">(</span>field <span class=\"token operator\">+</span> <span class=\"token string\">\"读取失败，程序已退出\"</span><span class=\"token punctuation\">)</span>\n                sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> ayml\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    HotKey <span class=\"token operator\">=</span> HotKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        conf <span class=\"token operator\">=</span> read_config<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        upload <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> <span class=\"token punctuation\">:</span> clipboard_upload<span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">)</span>\n        HotKey<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>upload<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        HotKey<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["python"],"tags":["python"]},{"title":"使用百度网盘开放api备份文件夹","url":"/p/919783a5.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近开始思考文件备份的问题，主要是网站的资源备份，然后想起了百度网盘的开放平台，于是搞了个程序，上传指定文件夹到百度网盘</p>\n<h1 id=\"申请接入\"><a href=\"#申请接入\" class=\"headerlink\" title=\"申请接入\"></a>申请接入</h1><p>百度网盘开放平台网址<a href=\"https://pan.baidu.com/union\">https://pan.baidu.com/union</a><br>申请接入点击后会让你选择个人接入还是公司接入，我选择的是个人接入。<br>然后创建应用，记录下应用的<code>AppKey</code>和<code>SecretKey</code></p>\n<h1 id=\"开发程序\"><a href=\"#开发程序\" class=\"headerlink\" title=\"开发程序\"></a>开发程序</h1><p>本人已经搞好了，下载链接<a href=\"https://pan.baidu.com/s/1N4_NNcmP9cx_q7UpRuxU1g?pwd=vuo7\">https://pan.baidu.com/s/1N4_NNcmP9cx_q7UpRuxU1g?pwd&#x3D;vuo7</a><br>一共两个，分别是<code>linux/amd64</code>和<code>linux/arm64</code>环境下的可执行文件</p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><p>在程序所在目录创建<code>config.yml</code>文件，填入相关配置，然后执行程序，首次执行会输出一个二维码，百度网盘app扫描授权一下即可。<br>配置参考如下</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>appkey</td>\n<td>申请接入时记录的AppKey</td>\n</tr>\n<tr>\n<td>secretkey</td>\n<td>申请接入时记录的SecretKey</td>\n</tr>\n<tr>\n<td>newdiskDirectory</td>\n<td>上传到网盘的文件夹名，位于<code>我的应用数据</code>文件夹下</td>\n</tr>\n<tr>\n<td>uploadPath</td>\n<td>本机上传文件夹路径</td>\n</tr>\n<tr>\n<td>accessToken</td>\n<td>访问令牌，不用填</td>\n</tr>\n<tr>\n<td>expiresIn</td>\n<td>访问令牌过期时间戳，不用填</td>\n</tr>\n<tr>\n<td>refreshToken</td>\n<td>更新令牌，不用填</td>\n</tr>\n</tbody></table>\n<p>示例如下</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">appkey</span><span class=\"token punctuation\">:</span> xxx\n<span class=\"token key atrule\">secretkey</span><span class=\"token punctuation\">:</span> xxx\n<span class=\"token key atrule\">newdiskDirectory</span><span class=\"token punctuation\">:</span> xxx\n<span class=\"token key atrule\">uploadPath</span><span class=\"token punctuation\">:</span> /xxxx/xxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"吐槽及坑\"><a href=\"#吐槽及坑\" class=\"headerlink\" title=\"吐槽及坑\"></a>吐槽及坑</h1><p>1、百度网盘开放平台提供的sdk竟然报错，很久不更新了吧。<br>2、有的错误码我找不到解释。<br>3、上传文件夹上传的md5不是空而是文件夹名字的md5。</p>\n","categories":["go"],"tags":["百度网盘 go"]},{"title":"某音乐网站爬取总结","url":"/p/8db0ca1b.html","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近经常访问的一个纯音乐网站公告因为不可抗力要关闭了，想着把网站的音乐全爬一下，最后总共获取到近7万条数据，300多G音乐文件(oss被我干欠费了，音乐网站的备用链接应该是站长自己搭的，短时间没明白如何防盗的就没搞)，现总结一下注意事项。</p>\n<h1 id=\"如何保证文件完整性\"><a href=\"#如何保证文件完整性\" class=\"headerlink\" title=\"如何保证文件完整性\"></a>如何保证文件完整性</h1><p>1、网页请求状态码需要判断一下。</p>\n<p>2、下载文件时为文件添加诸如<code>.xxx</code>后缀，下载完毕再重命名文件。</p>\n<h1 id=\"如何跑满带宽\"><a href=\"#如何跑满带宽\" class=\"headerlink\" title=\"如何跑满带宽\"></a>如何跑满带宽</h1><p>想要跑满带宽主要是堆线程，多线程下载（go语言这里是堆协程），我试了试网上控制协程数量的方法，不好用，协程数量上不去，同样的程序在windows上和linux上表现的也不一样，很让我疑惑。</p>\n<pre class=\"line-numbers language-golang\" data-language=\"golang\"><code class=\"language-golang\">\nvar wg sync.WaitGroup\nvar num int\nwg.Add(1)\n\nfor i :&#x3D; 1; i &lt; 1000; i++ &#123;\n  num++\n  &#x2F;&#x2F; 获取文件链接和其他信息\n\n  go func() &#123;\n    &#x2F;&#x2F; 下载文件\n\n    num--\n    fmt.Printf(&quot;\\r总协程数：%d&quot;, runtime.NumGoroutine())\n  &#125;()\n\n  if num &gt; 50 &#123;\n  \ttime.Sleep(time.Second)\n  &#125;\n\n&#125;\nwg.Wait()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"爬取文件分享\"><a href=\"#爬取文件分享\" class=\"headerlink\" title=\"爬取文件分享\"></a>爬取文件分享</h1><p>播放量大于200或者点赞量大于10的两万多首纯音乐分享，附带sql。<br><a href=\"https://pan.baidu.com/s/1cef05Wey3X2Yv1e8wF96JA?pwd=m7eg\">https://pan.baidu.com/s/1cef05Wey3X2Yv1e8wF96JA?pwd=m7eg</a></p>\n\n        <div id=\"aplayer-xNlBDsES\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\"></div>\n\t\t\t  <script>\n\t\t\t\t  var options = {\"narrow\":false,\"autoplay\":true,\"showlrc\":0,\"mode\":\"random\",\"mutex\":true,\"theme\":\"#e6d0b2\",\"preload\":\"metadata\",\"listmaxheight\":\"513px\",\"music\":[{\"title\":\"Apologize\",\"author\":\"Martin Ermen\",\"url\":\"https://www.lael.cn:6799/20150226105200-NjYwMTg5.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"300 Violin Orchestra\",\"author\":\"气势音乐\",\"url\":\"https://www.lael.cn:6799/20120514095503-NzI0ODEy.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"风动草\",\"author\":\"游学志\",\"url\":\"https://www.lael.cn:6799/20100922093028-NzcyMjg3.mp3\",\"pic\":\"\",\"lrc\":false},{\"title\":\"きっとまたいつか（Album Version）\",\"author\":\"Depapepe\",\"url\":\"https://www.lael.cn:6799/20101102034741-NjU4MjE4.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"夜的钢琴曲（五）\",\"author\":\"石进\",\"url\":\"https://www.lael.cn:6799/20101111125355-NzQ0MTE1.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"君生我未生\",\"author\":\"vivid 炎\",\"url\":\"https://www.lael.cn:6799/20110322055939-MjM1NzMy.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"千年一叹（古筝）\",\"author\":\"张晓红 王华\",\"url\":\"https://www.lael.cn:6799/20110618102252-MjQxNTU1.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Purple Passion\",\"author\":\"Diana Boncheva\",\"url\":\"https://www.lael.cn:6799/20111216082803-ODE0Mzkw.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Flower Dance\",\"author\":\"未知\",\"url\":\"https://www.lael.cn:6799/20120104105717-NDQzMDIx.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Breath And Life\",\"author\":\"Audio Machine\",\"url\":\"https://www.lael.cn:6799/20120107092108-ODA5ODEy.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"苏州听雨\",\"author\":\"张宇桦\",\"url\":\"https://www.lael.cn:6799/20200226105935-ODMzNDU5.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"白桦林【手风琴】\",\"author\":\"未知\",\"url\":\"https://www.lael.cn:6799/20120225121500-NTE1MDY5.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"超炫节奏流\",\"author\":\"popper zane wndw\",\"url\":\"https://www.lael.cn:6799/20120305060827-MjAwNDAz.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Caravan\",\"author\":\"a_hisa\",\"url\":\"https://www.lael.cn:6799/20120928092721-NjQwMzEw.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"忧郁洱海\",\"author\":\"欢庆\",\"url\":\"https://www.lael.cn:6799/20130109012810-MTkxNzc3.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"NEXT TO YOU\",\"author\":\"Ken Arai\",\"url\":\"https://www.lael.cn:6799/20141224060110-NjUwMTY5.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"萤火虫的舞蹈\",\"author\":\"张宇桦\",\"url\":\"https://www.lael.cn:6799/20150625095250-MjA3Nzc2.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Daylight\",\"author\":\"Seredris\",\"url\":\"https://www.lael.cn:6799/20200829075343-Nzg5MDE4.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"Life dance(生命之舞)\",\"author\":\"Brad White  Pierre Grill\",\"url\":\"https://www.lael.cn:6799/20121024015108-OTg0OTQw.mp3\",\"pic\":\"\",\"lrc\":\"\"},{\"title\":\"排箫 El Condor Pasa（山鹰之歌）\",\"author\":\"Leo Rojas\",\"url\":\"https://www.lael.cn:6799/20121119114507-NjQxNTg2.mp3\",\"pic\":\"\",\"lrc\":\"\"}]};\n\t\t\t\t  options.element = document.getElementById(\"aplayer-xNlBDsES\");\n\t\t\t\t  var ap = new APlayer(options);\n\t\t\t    window.aplayers || (window.aplayers = []);\n\t\t\t\t  window.aplayers.push(ap);\n\t\t\t  </script>\n\n\n","categories":["爬虫"],"tags":["go"]}]